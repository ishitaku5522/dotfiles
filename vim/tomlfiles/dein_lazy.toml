# vim:set foldmethod=marker:

[[plugins]]
repo = "bkad/CamelCaseMotion"
on_map = ['n', ',']
hook_post_source = ''' " {{{

call camelcasemotion#CreateMotionMappings(',')

''' # }}}

[[plugins]]
repo = "cohama/lexima.vim"
on_event = "InsertEnter"
hook_post_source = ''' " {{{

" call lexima#add_rule({'char': '<', 'input_after': '>'})
call lexima#add_rule({'char': '>', 'at': '\%#>', 'leave': 1})
call lexima#add_rule({'char': '<BS>', 'at': '<\%#>', 'input': '<BS>', 'delete' : 1})

for [begin, end] in [['(', ')'], ['{','}'], ['[',']']]
  call lexima#add_rule({'at': '\%#.*[-0-9a-zA-Z_,:]', 'char': begin, 'input': begin})
  call lexima#add_rule({'at': '\%#\n\s*'.end , 'char': end, 'input': '<CR>'.end, 'delete': end})
endfor

for mark in ['"', "'"]
  call lexima#add_rule({'at': '\%#.*[-0-9a-zA-Z_,:]', 'char': mark, 'input': mark})
endfor

call lexima#init()
" <BS>,<CR>が文字列ではなく展開されてしまうためうまくいかないので<lt>を利用
inoremap <silent><expr> <C-h> lexima#expand('<lt>BS>', 'i')
imap <silent><expr> <CR> pumvisible() ? '<C-y>' : lexima#expand('<lt>CR>', 'i')

''' # }}}

[[plugins]]
repo = 'iamcco/markdown-preview.vim'
on_ft = 'markdown'
# [[plugins]]
# repo = "kannokanno/previm"
# on_ft = 'markdown'
# [[plugins]]
# repo = "osyo-manga/vim-brightest"
# on_event = ['CursorHold']
# # on_cmd = ['BrightestEnable']
# [[plugins]]
repo = 'Shougo/unite.vim'
on_cmd = ['Unite', 'UniteWithBufferDir']

# TweetVim {{{

[[plugins]]
repo = 'ishitaku5522/TweetVim'
on_cmd = ['TweetVimHomeTimeline', 'TweetVimUserStream', 'TweetVimSay', 'TweetVimCommandSay']
depends = ['bitly.vim', 'twibill.vim',  'open-browser.vim']
# [[plugins]]
# repo = 'ishitaku5522/twibill.vim'

[[plugins]]
repo = 'basyura/twibill.vim'

[[plugins]]
repo = 'basyura/bitly.vim'

# }}}

# HTML CSS JS PLUGINS
[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]]
repo = 'csscomb/vim-csscomb'
on_ft = 'css'

[[plugins]]
repo = 'gregsexton/MatchTag'
on_ft = ['html','xml']

[[plugins]]
repo = 'othree/html5.vim'
on_ft = ['html']

[[plugins]]
repo = 'vim-scripts/JavaScript-Indent'
on_ft = 'javascript'

[[plugins]]
repo = 'glidenote/memolist.vim'
on_cmd = ['MemoNew', 'MemoList']

[[plugins]]
repo = 'kana/vim-submode'
on_map = ['n', '<C-w>']
hook_post_source = ''' " {{{
call submode#enter_with('winsize', 'n', '', '<C-w>>', '<C-w>>')
call submode#enter_with('winsize', 'n', '', '<C-w><', '<C-w><')
call submode#enter_with('winsize', 'n', '', '<C-w>+', '<C-w>+')
call submode#enter_with('winsize', 'n', '', '<C-w>-', '<C-w>-')
call submode#map('winsize', 'n', '', '>', '5<C-w>>')
call submode#map('winsize', 'n', '', '<', '5<C-w><')
call submode#map('winsize', 'n', '', '+', '5<C-w>+')
call submode#map('winsize', 'n', '', '-', '5<C-w>-')
''' # }}}

[[plugins]]
repo = 'lervag/vimtex'
on_ft = ['tex']

[[plugins]]
repo = 'osyo-manga/vim-precious'
on_event = "CursorHold"
depends = ['context_filetype.vim']

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'rdnetto/YCM-Generator'
on_cmd = 'YcmGenerateConfig'
depends = "YouCompleteMe"

[[plugins]]
repo = 'rhysd/vim-clang-format'
on_ft = ['c','cpp']

[[plugins]]
repo = 'Valloric/YouCompleteMe'
if = "!has('nvim')"
merged = 0
on_event = ['InsertEnter', 'CursorHold']
# build = 'install.py --clang-completer'
# [[plugins]]
# repo = 't9md/vim-choosewin'
# on_event = "VimEnter"
# [[plugins]]
# repo = 'davidhalter/jedi-vim'
# on_ft = 'python'

[[plugins]]
repo = 'tell-k/vim-autopep8'
on_ft = 'python'

# [[plugins]]
# repo = 'chrisbra/csv.vim'
# on_ft = 'csv'

[[plugins]]
repo = 'mattn/benchvimrc-vim'
on_cmd = 'BenchVimrc'

[[plugins]]
repo = 'jasonm23/markdown-css-themes'

# [[plugins]]
# repo = 'itchyny/thumbnail.vim'
# on_event = 'VimEnter'

[[plugins]]
repo = 'itchyny/calendar.vim'
on_cmd = 'Calender'

[[plugins]]
repo = 'majutsushi/tagbar'
on_cmd = ['TagbarToggle', 'TagbarOpen']

# [[plugins]]
# repo = 'yuratomo/gmail.vim'

[[plugins]]
repo = 'artur-shaik/vim-javacomplete2'
on_ft = 'java'

[[plugins]]
repo = 'AndrewRadev/linediff.vim'
on_cmd = 'Linediff'

