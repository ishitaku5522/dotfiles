set        -g  prefix      C-q
set        -s  escape-time 0
unbind-key C-b
bind-key   C-q send-prefix

# True color term
set -g  default-terminal   "screen-256color"
set -ga terminal-overrides ",xterm-256color:Tc"

set -g history-limit 100000 

# コピー関係
# setw   -g  mode-keys emacs
# bind   [   copy-mode \;             display "Copy mode"
# bind   -T  copy-mode C-Space        send    -X begin-selection
# bind   -T  copy-mode M-w            send    -X copy-pipe 'xsel -ip && xsel -op | xsel -ib'
# bind   ]   run       'tmux set-buffer -- "$(xsel -ob)"; tmux paste-buffer'
# bind   C-y run       'tmux set-buffer -- "$(xsel -ob)"; tmux paste-buffer'
# bind   -T copy-mode    MouseDrag1Pane send -X begin-selection
# unbind -T copy-mode    MouseDragEnd1Pane
setw   -g mode-keys    vi
bind   [  run          'tmux copy-mode; tmux display "Copy mode"'
bind   -T copy-mode-vi Space          send -X begin-selection

# bind   -T copy-mode-vi Enter          send -X copy-pipe-and-cancel 'xsel -ip && xsel -op | xsel -ib'
# bind   ]  run          'tmux set-buffer -- "$(xsel -ob)"; tmux paste-buffer'
# bind   -T copy-mode-vi Enter          send -X copy-pipe-and-cancel 'pbcopy'
# bind   ]  run          'tmux set-buffer -- "$(pbpaste)"; tmux paste-buffer'

if-shell "uname | grep -q Darwin" \
"bind -T copy-mode-vi Enter send -X copy-pipe-and-cancel 'pbcopy'" \
"bind -T copy-mode-vi Enter send -X copy-pipe-and-cancel 'xsel -ip && xsel -op | xsel -ib'"

if-shell "uname | grep -q Darwin" \
"bind ] run 'tmux set-buffer -- \"$(pbpaste)\"; tmux paste-buffer'" \
"bind ] run 'tmux set-buffer -- \"$(xsel -ob)\"; tmux paste-buffer'"

bind   -T copy-mode-vi MouseDrag1Pane send -X begin-selection
unbind -T copy-mode-vi MouseDragEnd1Pane


bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind -r H swap-pane   -U
bind -r J swap-pane   -D
bind -r K swap-pane   -U
bind -r L swap-pane   -D
bind -r { swap-pane   -U
bind -r } swap-pane   -D
bind -r + resize-pane -U 5
bind -r - resize-pane -D 5
bind -r > resize-pane -R 5
bind -r < resize-pane -L 5

bind c   new-window   -c  "#{pane_current_path}"
bind %   split-window -hc "#{pane_current_path}"
bind '"' split-window -vc "#{pane_current_path}"

if-shell '[[ `\tmux -V | cut -d" " -f2` != "master" && "$(echo "`\tmux -V | cut -d" " -f2 | cut -c 1-3` < 2.1" | bc)" -eq 1 ]]' \
"set -g mode-mouse on; set -g mouse-resize-pane on; set -g mouse-select-pane on; set -g mouse-select-window on" \
"set -g mouse on"

# ステータスラインまわり
source-file ~/localrcs/tmux-local
set -g base-index 1
set -g renumber-windows on
set -g status-position top
set -g status-interval 1

_tmux_color_bg='#282C34'
_tmux_color_fg='#ABB2BF'
_tmux_color_number='#D19A66'
_tmux_color_string='#98C379'
_tmux_color_function='#61AFEF'
_tmux_color_comment='#5C6370'

# 全体のデザイン
set  -g status-style                "fg=$_tmux_color_fg,bg=$_tmux_color_bg"
# ステータスラインウィンドウ一覧デザイン
setw -g window-status-style         "fg=$_tmux_color_comment,bg=$_tmux_color_bg"
setw -g window-status-current-style "fg=$_tmux_color_number,bg=$_tmux_color_bg"
# ステータスライン左側デザイン
set  -g status-left-length          20
set  -g status-left                 "#[fg=$_tmux_color_function,bg=$_tmux_color_bg]#{?client_prefix,#[reverse],} [#S]#{=15:host} "
# ステータスライン右側デザイン
set  -g status-right                "#[fg=$_tmux_color_string,bg=$_tmux_color_bg]\"#{=20:pane_title}\" %Y/%m/%d(%a) %T"
set  -g status-right-length         50

set -g @plugin 'tmux-plugins/tmux-resurrect'
run '~/.tmux/plugins/tpm/tpm'
# Template for local settings
# setw       -g clock-mode-colour     red
# set-option -g pane-active-border-fg red
